{"version":3,"sources":["hooks/store.js","firebase.js","api/auth.js","api/db.js","store/books/index.js","components/BookItem/index.jsx","pages/Home.jsx","pages/BookPage.jsx","pages/Topic/index.jsx","store/lists/index.js","pages/List/index.jsx","pages/FilterPage/index.jsx","components/TopicList/index.jsx","components/FilterList/index.jsx","App.jsx","store/topics/index.js","store/user/index.js","reportWebVitals.js","store/reducer.js","store/middleware.js","store/index.js","store/state.js","index.js"],"names":["useStore","mapState","state","mapDispatch","dispatch","useDispatch","useSelector","shallowEqual","useMemo","bindActionCreators","useActions","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","db","firestore","auth","provider","GithubAuthProvider","fieldForFilter","favorite","marked","read","updateBook","bookId","data","collection","doc","update","then","get","mapDoc","mapSnapshot","snapshot","docs","map","mapRef","ref","id","getBooks","books","type","payload","unsetBooks","getBooksByTopic","topic","where","actions","getBooksByFilter","filter","userId","getBook","slug","book","unsetBook","likeBook","user","uid","likedBy","includes","concat","markBook","markedBy","readBook","readBy","Meta","Card","BookItem","to","className","hoverable","style","width","cover","alt","src","imageUrl","title","description","Home","useEffect","list","minHeight","gutter","xs","sm","md","lg","span","BookPage","match","single","bookActions","params","handleLikeBook","useCallback","handleBookmarkButtonClick","handleReadButtonClick","size","bordered","Item","avatar","HeartOutlined","author","publisher","year","pages","topics","t","length","disabled","onClick","shape","icon","LikeFilled","LikeOutlined","HeartFilled","Icon","component","CheckSquareFilled","CheckSquareOutlined","active","Topic","find","topicId","sortBooks","slice","sort","a","b","getLists","lists","getList","listId","Promise","all","createList","add","docRef","ListPage","listActions","titleForFilter","FilterPage","SubMenu","Layout","Header","Content","Footer","Sider","Menu","TopicList","markedTopics","otherTopics","theme","defaultSelectedKeys","mode","HomeOutlined","DesktopOutlined","Divider","PieChartOutlined","UserOutlined","FilterList","path","BookOutlined","CheckCircleOutlined","item","url","actionsToBind","getTopics","login","logout","getUser","App","useState","collapsed","setCollapsed","history","useHistory","handleSignOut","signOut","push","useRouteMatch","collapsible","onCollapse","console","log","email","LogoutOutlined","signInWithPopup","result","padding","margin","exact","textAlign","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","combineReducers","action","composeWithDevTools","applyMiddleware","thunk","promiseMiddleware","createStore","reducer","middleware","ReactDOM","render","StrictMode","store","basename","process","document","getElementById"],"mappings":"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","file":"static/js/main.c4e4fc29.chunk.js","sourcesContent":["// import { bindActionCreators } from \"redux\";\r\n// import { useSelector, useDispatch } from \"react-redux\";\r\n\r\n// export default function useStore(mapStateToProps = state => state, mapDispatchToProps = () => {}) {\r\n//     const state = useSelector(state => mapStateToProps(state));\r\n//     const dispatch = useDispatch();\r\n//     const actions = bindActionCreators(mapDispatchToProps, dispatch);\r\n\r\n//     return { state, actions }\r\n// }\r\n\r\n\r\n\r\nimport { useMemo } from 'react';\r\nimport { bindActionCreators } from 'redux';\r\nimport { useSelector, useDispatch, shallowEqual } from 'react-redux';\r\n\r\nexport function useStore(mapState = state => state, mapDispatch = () => {}) {\r\n    const dispatch = useDispatch();\r\n\r\n    return [\r\n        useSelector(mapState, shallowEqual),\r\n        useMemo(() => bindActionCreators(mapDispatch, dispatch), [mapDispatch, dispatch])\r\n    ];\r\n}\r\n\r\nexport function useActions(mapDispatch) {\r\n    const dispatch = useDispatch();\r\n\r\n    return useMemo(() => bindActionCreators(mapDispatch, dispatch), [mapDispatch, dispatch]);\r\n}\r\n\r\nexport { useSelector };","import firebase from 'firebase'\r\n    // Initialize Cloud Firestore through Firebase\r\n\r\n    firebase.initializeApp({\r\n        apiKey: \"AIzaSyCNu0FVw7ps2Z32lb_tfEeCRRvlRB0E4rw\",\r\n        authDomain: \"react-books-42aa1.firebaseapp.com\",\r\n        databaseURL: \"https://react-books-42aa1.firebaseio.com\",\r\n        projectId: \"react-books-42aa1\",\r\n        storageBucket: \"react-books-42aa1.appspot.com\",\r\n        messagingSenderId: \"1093912261475\",\r\n        appId: \"1:1093912261475:web:3765a6ea729962e1491956\"\r\n    });\r\n  \r\n\r\n    const db = firebase.firestore();\r\n    const auth = firebase.auth();\r\n\r\nexport { db, auth };\r\n","import {auth} from '../firebase';\r\nimport firebase from 'firebase';\r\n\r\n\r\nconst provider = new firebase.auth.GithubAuthProvider();\r\n\r\nexport function signIn() {\r\n    return auth.signInWithPopup(provider)\r\n        .then(result => result.user);\r\n}\r\n\r\nexport function signOut() {\r\n    return auth.signOut();\r\n}\r\n\r\nexport default auth;","import { db } from \"../firebase\";\r\n\r\n// import { firebase } from 'firebase';\r\n// const db = firestore();\r\n\r\nconst operatorForField = {\r\n    authors: 'array-contains',\r\n    publisher: '==',\r\n    topics: 'array-contains',\r\n    subtopics: 'array-contains',\r\n};\r\n\r\nconst fieldForFilter = {\r\n    favorite: 'likedBy',\r\n    marked: 'markedBy',\r\n    read: 'readBy'\r\n};\r\n\r\n\r\n\r\nexport function getUser(userId) {\r\n    return db.collection('users')\r\n        .doc(userId)\r\n        .get()\r\n        .then(mapDoc);\r\n}\r\n\r\nexport function getBooks() {\r\n    return db.collection('books')\r\n        .get()\r\n        .then(snapshot => {\r\n            const items = snapshot.docs.map(doc => ({\r\n                id: doc.id,\r\n                ...doc.data()\r\n            }));\r\n            return items;\r\n        });\r\n}\r\n\r\nexport function getTopics() {\r\n    return db.collection('topics')\r\n        .get()\r\n        .then(snapshot => {\r\n            const items = snapshot.docs.map(doc => ({\r\n                id: doc.id,\r\n                ...doc.data()\r\n            }));\r\n            return items;\r\n        });\r\n}\r\nexport function getBook(slug) {\r\n    return db.collection('books')\r\n        .where('slug', '==', slug)\r\n        .get()\r\n        .then(snapshot => {\r\n            const item = snapshot.docs[0].data()\r\n            return item\r\n        });\r\n}\r\nexport function createBook(data) {\r\n    return db.collection('books')\r\n        .add(data)\r\n        .then(docRef => docRef.get())\r\n        .then(mapDoc);\r\n}\r\n\r\n// export function updateBook(bookId, data) {\r\n//     return db.collection('books')\r\n//         .doc(bookId)\r\n//         .update(data)\r\n//         .then(() => data);\r\n        \r\n// }\r\n\r\nexport function updateBook(bookId, data) {\r\n    return db.collection('books')\r\n        .doc(bookId)\r\n        .update(data)\r\n        .then(() => db.collection('books').doc(bookId).get())\r\n        .then(mapDoc);\r\n}\r\n\r\nexport function getBooksByTopic(topic) {\r\n    return db.collection('books')\r\n        .where('topics', 'array-contains', topic)\r\n        .get()\r\n        .then(mapSnapshot);\r\n}\r\nexport function getBooksByFilter(filter, userId) {\r\n    return db.collection('books')\r\n        .where(fieldForFilter[filter], 'array-contains', userId)\r\n        .get()\r\n        .then(mapSnapshot);\r\n}\r\n\r\n\r\nexport function getLists(userId) {\r\n    return db.collection('lists')\r\n        .where('userId', '==', userId)\r\n        .get()\r\n        .then(snapshot => {\r\n            const items = snapshot.docs.map(doc => ({\r\n                id: doc.id,\r\n                ...doc.data()\r\n            }));\r\n            return items;\r\n        });\r\n}\r\n\r\nexport function createList(data) {\r\n    return db.collection('lists')\r\n        .add(data)\r\n        .then(docRef => docRef.get())\r\n        .then(mapDoc);\r\n}\r\n// export function getList(listId) {\r\n//     return db.collection('lists').doc(listId)\r\n//         .get()\r\n//         .then(mapDoc)\r\n//         .then(list => {\r\n//             Promise.all(list.books.map(mapRef)).then(console.log(list))\r\n            \r\n//             return list;\r\n//         });\r\n// }\r\n\r\nexport function getList(listId) {\r\n    return db.collection('lists').doc(listId)\r\n        .get()\r\n        .then(mapDoc)\r\n        .then(list => {\r\n            return Promise.all(list.books.map(mapRef))\r\n                .then(books => {\r\n                    list.books = books;\r\n                    return list;\r\n                });\r\n        });\r\n}\r\n\r\n\r\nfunction mapSnapshot(snapshot) {\r\n    return snapshot.docs.map(mapDoc);\r\n}\r\n\r\nfunction mapRef(ref) {\r\n    return ref.get().then(mapDoc);\r\n}\r\n\r\nfunction mapDoc(doc) {\r\n    return {\r\n        id: doc.id,\r\n        ...doc.data()\r\n    };\r\n}","import * as db from '../../api/db';\r\n\r\nexport default function reducer(state = {}, action) {\r\n    switch (action.type) {\r\n        case 'GET_BOOKS':\r\n            return {\r\n                ...state,\r\n                list: action.payload.books\r\n                //single: action.payload.books\r\n            }\r\n        case 'UNSET_BOOKS':\r\n            return {\r\n                ...state,\r\n                list: []\r\n            };\r\n\r\n        case 'GET_BOOK':\r\n            return {\r\n                ...state,\r\n                single: action.payload.book\r\n        }\r\n        case 'UNSET_BOOK':\r\n            return {\r\n                ...state,\r\n                single: null\r\n        }\r\n\r\n        case 'LIKE_BOOK':\r\n            return {\r\n                ...state,\r\n                single: action.payload.book\r\n        }\r\n        case 'MARK_BOOK':\r\n            return {\r\n                ...state,\r\n                single: action.payload.book\r\n        }\r\n        case 'READ_BOOK':\r\n            return {\r\n                ...state,\r\n                single: action.payload.book\r\n        }\r\n\r\n        case 'CREATE_BOOK':\r\n            return state;\r\n    \r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport function getBooks() {\r\n    return db.getBooks()\r\n        .then(books => ({\r\n            type: 'GET_BOOKS',\r\n            payload: {\r\n                books\r\n            }\r\n        }));\r\n}\r\nexport function unsetBooks() {\r\n    return {\r\n        type: 'UNSET_BOOKS'\r\n    };\r\n}\r\n\r\n\r\nexport function getBook(slug) {\r\n    return db.getBook(slug)\r\n        .then(book => ({\r\n            type: 'GET_BOOK',\r\n            payload: {\r\n                book\r\n            }\r\n        }));\r\n}\r\n\r\nexport function unsetBook() {\r\n    return {\r\n        type: 'UNSET_BOOK'\r\n    };\r\n}\r\n\r\n\r\n\r\n\r\nexport function likeBook(book, user) {\r\n    const userId = user.uid;\r\n    const data = {\r\n        likedBy: book.likedBy ? (\r\n            book.likedBy.includes(userId) ?\r\n                book.likedBy.filter(id => id !== userId) :\r\n                book.likedBy.concat(userId)\r\n        ) : [userId]\r\n    };\r\n\r\n    return db.updateBook(book.id, data)\r\n        .then(book => ({\r\n            type: 'LIKE_BOOK',\r\n            payload: {\r\n                book\r\n            }\r\n        }));\r\n}\r\n\r\nexport function markBook(book, user) {\r\n    const userId = user.uid;\r\n    const data = {\r\n        markedBy: book.markedBy ? (\r\n            book.markedBy.includes(userId) ?\r\n                book.markedBy.filter(id => id !== userId) :\r\n                book.markedBy.concat(userId)\r\n        ) : [userId]\r\n    };\r\n\r\n    return db.updateBook(book.id, data)\r\n        .then(book => ({\r\n            type: 'MARK_BOOK',\r\n            payload: {\r\n                book\r\n            }\r\n        }));\r\n}\r\n\r\nexport function readBook(book, user) {\r\n    const userId = user.uid;\r\n    const data = {\r\n        readBy: book.readBy ? (\r\n            book.readBy.includes(userId) ?\r\n                book.readBy.filter(id => id !== userId) :\r\n                book.readBy.concat(userId)\r\n        ) : [userId]\r\n    };\r\n\r\n    return db.updateBook(book.id, data)\r\n        .then(book => ({\r\n            type: 'READ_BOOK',\r\n            payload: {\r\n                book\r\n            }\r\n        }));\r\n}\r\n\r\n\r\nexport function createBook(data) {\r\n    return db.createBook(data)\r\n        .then(book => ({\r\n            type: 'CREATE_BOOK',\r\n            payload: {\r\n                book\r\n            }\r\n        }));\r\n}\r\n\r\nexport function getBooksByTopic(topic) {\r\n    return db.getBooksByTopic(topic)\r\n        .then(books => ({\r\n            type: 'GET_BOOKS',\r\n            payload: {\r\n                books\r\n            }\r\n        }));\r\n}\r\n\r\nexport function getBooksByFilter(filter, userId) {\r\n    return db.getBooksByFilter(filter, userId)\r\n        .then(books => ({\r\n            type: 'GET_BOOKS',\r\n            payload: {\r\n                books\r\n            }\r\n        }));\r\n}\r\n\r\n\r\n\r\nexport const actions = {\r\n    getBooks,\r\n    unsetBooks,\r\n    //searchBooks,\r\n    getBooksByTopic,\r\n    getBooksByFilter,\r\n    getBook,\r\n    unsetBook,\r\n    likeBook,\r\n    markBook,\r\n    readBook\r\n};","import React from 'react';\r\nimport {Route, Link} from 'react-router-dom';\r\n\r\nimport { Card } from 'antd';\r\n\r\n\r\n\r\nconst { Meta } = Card;\r\n\r\nconst BookItem = ({book}) => {\r\n    return (\r\n        <Link  to={`/books/${book.slug}`}>\r\n            <Card\r\n                className=\"bookItem\"\r\n                hoverable\r\n                style={{ width: 240 }}\r\n                to={`/books/${book.slug}`}\r\n                cover={<img alt=\"example\" src={book.imageUrl} />}\r\n        >\r\n                <Meta title={book.title} description=\"www.instagram.com\" />\r\n            </Card>\r\n      </Link>\r\n        // <div >\r\n        //     <Link  to={`/books/${book.slug}`}>\r\n        //          <h2>{book.title}</h2>\r\n        //         <img src={book.imageUrl} />\r\n        //     </Link>\r\n          \r\n        // </div>\r\n    );\r\n}\r\n\r\nexport default BookItem;\r\n","import React, { useEffect } from 'react';\r\nimport {useStore} from '../hooks/store';\r\nimport { getBooks } from '../store/books';\r\nimport BookItem from '../components/BookItem';\r\n\r\nimport {  Layout, Row, Col } from 'antd';\r\n\r\nconst Home = () => {\r\n    const [ state, actions ] = useStore(state => state, { getBooks });\r\n\r\n    useEffect(() => {\r\n      actions.getBooks();\r\n    }, []);\r\n  \r\n    const books = state.books.list;\r\n    \r\n    return (\r\n        <>\r\n        <Layout style={{ minHeight: '100vh' }} id='components-layout-demo-side'>\r\n            <Row gutter={{ xs: 8, sm: 16, md: 24, lg: 32 }}>\r\n                { books && books.map((book) => (\r\n                    <Col key={book.id} className=\"gutter-row\" span={4}>\r\n                        <BookItem book={book} />\r\n                    </Col> \r\n                )) }\r\n                \r\n            </Row>\r\n          </Layout>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Home;\r\n","import React, { useCallback } from 'react';\r\nimport { useEffect } from 'react';\r\n\r\n//import { getBook, likeBook, unsetBook } from '../store/books';\r\nimport {useStore} from '../hooks/store';\r\n\r\nimport { actions as bookActions } from '../store/books';\r\n\r\nimport { \r\n    Button, \r\n    Tooltip, \r\n    Badge,\r\n    Skeleton,\r\n    List,\r\n} from 'antd';\r\nimport Icon from '@ant-design/icons';\r\nimport { \r\n    LikeFilled,\r\n    LikeOutlined,\r\n    HeartOutlined,\r\n    HeartFilled,\r\n    CheckSquareFilled,\r\n    CheckSquareOutlined\r\n\r\n} from '@ant-design/icons';\r\n\r\nconst BookPage = ({match}) => {\r\n    // const [ {book, user}, actions ] = useStore(state => ({\r\n    //     book: state.books.single,\r\n    //     user: state.user,\r\n    // }), { getBook, likeBook, unsetBook });\r\n\r\n\r\n    const [{ book, user }, actions] = useStore(state => ({\r\n        user: state.user,\r\n        book: state.books.single\r\n    }), bookActions);\r\n\r\n   \r\n    useEffect(() => {\r\n      actions.getBook(match.params.bookId);\r\n\r\n      return () => actions.unsetBook();\r\n    }, [actions, match.params.bookId]);\r\n\r\n    const handleLikeBook = useCallback(() => {\r\n        if (user) {\r\n            actions.likeBook(book, user);\r\n        }\r\n    }, [actions, user, book]);\r\n\r\n    const handleBookmarkButtonClick = useCallback(() => {\r\n        if (user) {\r\n            actions.markBook(book, user);\r\n        }\r\n    }, [actions, user, book]);\r\n\r\n    const handleReadButtonClick = useCallback(() => {\r\n        if (user) {\r\n            actions.readBook(book, user);\r\n        }\r\n    }, [actions, user, book]);\r\n\r\n    if (!book) return <Skeleton active />;\r\n\r\n    return (\r\n        <div className=\"bookPage\">\r\n            \r\n            <div>\r\n                <img src={book && book.imageUrl} alt={book &&  book.title} />\r\n                <div>\r\n                <List\r\n                    size=\"small\"\r\n                    bordered\r\n                    >\r\n                    <List.Item>\r\n                        <List.Item.Meta\r\n                            avatar={<HeartOutlined />}\r\n                            //title={<a href=\"https://ant.design\">{book.author}</a>}\r\n                            title={book.author}\r\n                            description=\"Aвтор\"\r\n                            />\r\n                            Автор: {book.author}</List.Item>\r\n               </List>\r\n                    <div>Автор: {book.author}</div> \r\n                    <div>Издатель: {book.publisher}</div> \r\n                    <div>Год: {book.year}</div> \r\n                    <div>Всего страниц: {book.pages}</div> \r\n                    <div>Категтрии: {book.topics && book.topics.map(t => t)}</div> \r\n                    \r\n                </div>\r\n            </div>\r\n            <div className=\"bookInfo\">\r\n                <div className=\"bookHeader\">\r\n                    <h1>{book && book.title}</h1>\r\n                    <div>\r\n                        <Tooltip title=\"Like me\">\r\n                            {/* <Badge count={book.likedBy && book.likedBy.length || 0}>\r\n                                <Button disabled={!user} onClick={handleLikeBook} type=\"primary\" shape=\"circle\" icon={<LikeOutlined />} />\r\n                            </Badge> */}\r\n                            <span className=\"likes\">{book.likedBy && book.likedBy.length}</span>\r\n                            <Button \r\n                                disabled={!user} \r\n                                onClick={handleLikeBook} \r\n                                type=\"primary\" \r\n                                shape=\"circle\" \r\n                                icon={user && book.likedBy.includes(user.uid) ? <LikeFilled /> : <LikeOutlined />} />\r\n                        </Tooltip>\r\n                        <Tooltip title=\"Add to my List\">\r\n                            <Button disabled={!user} \r\n                                    onClick={handleBookmarkButtonClick} \r\n                                    type=\"primary\" \r\n                                    shape=\"circle\" \r\n                                    icon={user && book.markedBy.includes(user.uid) ? <HeartFilled /> : <HeartOutlined /> } />\r\n                                    {/* {user && book.markedBy?.includes(user.uid) ? 'bookmark' : 'bookmark_outline'} */}\r\n                        </Tooltip>\r\n                        <Tooltip title=\"В прочитанные\">\r\n                            \r\n                                    {/* {user && book.markedBy?.includes(user.uid) ? 'bookmark' : 'bookmark_outline'} */}\r\n                                    {/* CheckSquareFilled CheckSquareOutlined <TagOutlined />*/}\r\n                                    <Icon onClick={handleReadButtonClick} component={user && book.readBy.includes(user.uid) ? CheckSquareFilled : CheckSquareOutlined}/>\r\n                        </Tooltip>\r\n                    </div>\r\n                </div> \r\n                {book.description}\r\n            </div>\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default BookPage;\r\n","import React, { useEffect } from 'react';\r\nimport {useStore} from '../../hooks/store';\r\nimport { getBooksByTopic, unsetBooks } from '../../store/books';\r\nimport BookItem from '../../components/BookItem';\r\n\r\nconst Topic = ({match}) => {\r\n\r\n    const [ state , actions ] = useStore(state => ({\r\n        topic: state.topics.find(topic => topic.id === match.params.topicId),\r\n        books: state.books.list\r\n    }), {getBooksByTopic, unsetBooks})\r\n\r\n    useEffect(() => {\r\n        actions.unsetBooks();\r\n        actions.getBooksByTopic(match.params.topicId)\r\n    }, [match.params.topicId]);\r\n\r\n    const sortBooks = state.books.slice().sort((a, b) => b.likedBy.length - a.likedBy.length)\r\n\r\n    return (\r\n        <div>\r\n            <h1>{state.topic && state.topic.title}</h1>\r\n            \r\n            { sortBooks.map(book => <BookItem book={book} key={book.id} />) }\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Topic;\r\n","import * as db from '../../api/db';\r\n\r\nexport default function reducer(state = {}, action) {\r\n    switch (action.type) {\r\n        // case 'GET_LISTS':\r\n        //     return action.payload.lists\r\n        case 'GET_LISTS':\r\n            return {\r\n                ...state,\r\n                list: action.payload.lists\r\n        }  \r\n      \r\n        // case 'GET_LIST':\r\n        //     return action.payload.list\r\n       \r\n        case 'GET_LIST':\r\n            return {\r\n                ...state,\r\n                single: action.payload.list\r\n        }\r\n  \r\n        case 'CREATE_LIST':\r\n            return state;\r\n\r\n        case 'UPDATE_LIST':\r\n            return state;\r\n\r\n        case 'DELETE_LIST':\r\n            return state;\r\n    \r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n\r\nexport function getLists(userId) {\r\n    return db.getLists(userId)\r\n        .then(lists => ({\r\n            type: 'GET_LISTS',\r\n            payload: {\r\n                lists\r\n            }\r\n        }));\r\n}\r\n\r\nexport function getList(listId) {\r\n    return db.getList(listId)\r\n        .then(list => ({\r\n            type: 'GET_LIST',\r\n            payload: {\r\n                list\r\n            }\r\n        }));\r\n}\r\n\r\nexport function createList(data) {\r\n    return db.createList(data)\r\n        .then(list => ({\r\n            type: 'CREATE_LIST',\r\n            payload: {\r\n                list\r\n            }\r\n        }));\r\n}\r\n\r\n\r\nexport function deleteList() {\r\n    return {\r\n        type: 'DELETE_LIST'\r\n    };\r\n}\r\n\r\n\r\n\r\nexport const actions = {\r\n    getLists,\r\n    getList,\r\n    createList\r\n};","import React from 'react';\r\nimport { useEffect } from 'react';\r\n\r\nimport { useStore } from '../../hooks/store';\r\n\r\nimport { actions as listActions } from '../../store/lists';\r\n\r\n\r\nimport { \r\n    Skeleton,\r\n    Layout,\r\n    Row,\r\n    Col\r\n} from 'antd';\r\n\r\nimport { useSelector } from '../../hooks/store';\r\nimport BookItem from '../../components/BookItem';\r\n\r\n\r\n\r\nconst ListPage = ({match}) => {\r\n\r\n    //const [ list, actions ] = useStore(state => state.lists.filter(l => l.id === match.params.listId)[0], listActions );\r\n\r\n    const [list, actions] = useStore(state => state.lists.single, listActions)\r\n\r\n    useEffect(() => {\r\n        if (!list) {\r\n            actions.getList(match.params.listId);\r\n        }\r\n  \r\n    //   return () => actions.unsetBooks();\r\n    }, [actions, match.params.listId]);\r\n\r\n  \r\n    if (!list) return <Skeleton active />;\r\n\r\n    return (\r\n        <div id=\"list-page\" className=\"page\">\r\n            <Layout style={{ minHeight: '100vh' }} id='components-layout-demo-side'>\r\n            <h1>{list.title}</h1>\r\n            <Row gutter={{ xs: 8, sm: 16, md: 24, lg: 32 }}>\r\n                { list.books.map((book) => (\r\n                    <Col key={book.id} className=\"gutter-row\" span={4}>\r\n                        <BookItem book={book} />\r\n                    </Col> \r\n                )) }\r\n                \r\n            </Row>\r\n        </Layout>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ListPage;\r\n","import React, { useEffect } from 'react';\r\n\r\nimport { useSelector, useActions } from '../../hooks/store';\r\nimport { actions as bookActions } from '../../store/books';\r\nimport BookItem from '../../components/BookItem';\r\n\r\nimport {  Layout, Row, Col } from 'antd';\r\n\r\nconst titleForFilter = {\r\n    favorite: 'Понравившиеся',\r\n    marked: 'Отложенные',\r\n    read: 'Прочитанные'\r\n};\r\n\r\nexport default function FilterPage({ match }) {\r\n    const filter = match.params.filter;\r\n    const user = useSelector(state => state.user);\r\n    const books = useSelector(state => state.books.list);\r\n    const actions = useActions(bookActions);\r\n\r\n    useEffect(() => {\r\n        actions.getBooksByFilter(filter, user.uid);\r\n    }, [actions, filter, user]);\r\n\r\n    if (!user) return 'LOADING...';\r\n\r\n    return (\r\n        <>\r\n            <Layout style={{ minHeight: '100vh' }} id='components-layout-demo-side'>\r\n                <h1>{titleForFilter[filter]}</h1>\r\n                <Row gutter={{ xs: 8, sm: 16, md: 24, lg: 32 }}>\r\n                    { books && books.map((book) => (\r\n                        <Col key={book.id} className=\"gutter-row\" span={4}>\r\n                            <BookItem book={book} />\r\n                        </Col> \r\n                    )) }\r\n                    \r\n                </Row>\r\n          </Layout>\r\n        </>\r\n    );\r\n}","import React from 'react';\r\nimport { Link, NavLink } from 'react-router-dom';\r\n\r\nimport { Avatar, Button, Layout, Menu } from 'antd';\r\nimport {\r\n  DesktopOutlined,\r\n  PieChartOutlined,\r\n  UserOutlined,\r\n  HomeOutlined,\r\n} from '@ant-design/icons';\r\n\r\nconst { Header, Content, Footer, Sider } = Layout;\r\nconst { SubMenu } = Menu;\r\n\r\nconst TopicList = ({topics, user, lists}) => {\r\n    const markedTopics = user ? topics.filter(topic => topic.markedBy.includes(user.id)) : null;\r\n    const otherTopics = markedTopics ? topics.filter(t => !markedTopics.includes(t)) : topics;\r\n\r\n    return (\r\n        <Menu theme=\"dark\" defaultSelectedKeys={['1']} mode=\"inline\">\r\n            <Menu.Item key=\"1\" icon={<HomeOutlined />}>\r\n              <NavLink  to=\"/\" >Главная</NavLink >\r\n            </Menu.Item>\r\n            <Menu.Item key=\"2\" icon={<DesktopOutlined />}>\r\n              <Link to=\"/new\">Новые</Link> \r\n            </Menu.Item>\r\n\r\n            <Menu.Divider />\r\n\r\n            { lists && lists.list.map(list => <Menu.Item key={list.id}><Link to={`/lists/${list.id}`}>{list.title}</Link></Menu.Item>) }\r\n\r\n            <Menu.Divider />\r\n            { markedTopics.map((topic) => (\r\n              <Menu.Item key={topic.id} icon={<PieChartOutlined />}>\r\n                <NavLink  to={`/topics/${topic.id}`} >{topic.title}</NavLink >\r\n              </Menu.Item>\r\n              )) }\r\n            { otherTopics.map((topic) => (\r\n              <Menu.Item key={topic.id} icon={<PieChartOutlined />}>\r\n                <NavLink  to={`/topics/${topic.id}`} >{topic.title}</NavLink >\r\n              </Menu.Item>\r\n              )) }\r\n\r\n            <SubMenu key=\"sub1\" icon={<UserOutlined />} title=\"User\">\r\n              <Menu.Item key=\"3\">Tom</Menu.Item>\r\n              <Menu.Item key=\"4\">Bill</Menu.Item>\r\n              <Menu.Item key=\"5\">Alex</Menu.Item>\r\n            </SubMenu>\r\n\r\n          </Menu>\r\n          \r\n    );\r\n}\r\n\r\nexport default TopicList;\r\n","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nimport {Menu } from 'antd';\r\nimport {\r\n  HeartOutlined,\r\n  CheckCircleOutlined,\r\n  BookOutlined\r\n} from '@ant-design/icons';\r\n\r\n\r\nconst FilterList = ({user}) => {\r\n\r\n    return (\r\n      <>\r\n        <Menu theme=\"dark\" defaultSelectedKeys={['1']} mode=\"inline\">\r\n\r\n          { [\r\n              { path: '/favorite', title: 'Понравившиеся', icon: <HeartOutlined/> },\r\n              { path: '/marked', title: 'Отложенные', icon: <BookOutlined /> },\r\n              { path: '/read', title: 'Прочитанные', icon: <CheckCircleOutlined /> },\r\n            ].map( item => (\r\n              <Menu.Item key={item.url} icon={item.icon}>\r\n                <NavLink  to={item.path} >{item.title}</NavLink >\r\n              </Menu.Item>\r\n            ))\r\n          }\r\n          </Menu>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default FilterList;\r\n","import { useEffect, useState, useCallback } from 'react';\nimport {Switch, Route, useHistory, useRouteMatch } from 'react-router-dom';\n\nimport './App.css';\nimport 'antd/dist/antd.css';\n\nimport {useStore, useActions, useSelector} from './hooks/store';\n\nimport auth, { signIn, signOut } from './api/auth';\n\nimport { getBooks } from './store/books';\nimport { getTopics } from './store/topics';\nimport { login, logout, getUser } from './store/user';\n\nimport Home from './pages/Home';\nimport BookPage from './pages/BookPage';\nimport Topic from './pages/Topic';\nimport ListPage from './pages/List';\nimport FilterPage from './pages/FilterPage';\n\n\nimport TopicList from './components/TopicList';\nimport FilterList from './components/FilterList';\n\nimport { Avatar, Button, Layout, Menu, Breadcrumb } from 'antd';\nimport {\n  UserOutlined,\n  LogoutOutlined,\n} from '@ant-design/icons';\n\nimport { getLists } from './store/lists';\n\n\n\nconst { Header, Content, Footer, Sider } = Layout;\nconst { SubMenu } = Menu;\n\nconst actionsToBind = {\n  getTopics,\n  getLists,\n  login,\n  logout,\n  getUser\n};\n\n\nfunction App () {\n\n  const [collapsed, setCollapsed] = useState(false)\n\n  const onCollapse = collapsed => {\n    console.log(collapsed);\n    setCollapsed(collapsed);\n  };\n\n  const topics = useSelector(state => state.topics);\n  const user = useSelector(state => state.user);\n  const lists = useSelector(state => state.lists);\n  const actions = useActions(actionsToBind);\n  \n  const history = useHistory();\n\n  useEffect(() => {\n    // auth.onAuthStateChanged(user => {\n    //     if (user) {\n    //         actions.login(user);\n          \n    //     } else {\n    //         actions.logout();\n    //     }\n    // });\n    if (user) {\n      actions.getLists(user.uid + '')\n    }\n    actions.getTopics();\n}, [actions]);\n\nconst handleSignOut = useCallback(() => {\n  signOut();\n  history.push('/');\n}, [history]);\n\n\n//Breadcrumb\nconst match = useRouteMatch('/topics/:topicId');\nconst book = useSelector(state => state.books.single);\nconst topic = match  && topics.find(t => t.id === match.params.topicId)\nconst title = (topic && topic.title) || (book && book.title) || '';\n  \n  return (\n    <div className=\"app\">\n      <Layout style={{ minHeight: '100vh' }} id='components-layout-demo-side'>\n        <Sider collapsible collapsed={collapsed} onCollapse={onCollapse}>\n          <div className=\"logo\" >\n            {user ? <div onClick={() => handleSignOut}> {user.email} <Button><LogoutOutlined /></Button></div> : <div onClick={() => signIn()}> <Button>LOG IN</Button></div>}\n          </div>\n\n           { user &&  <FilterList /> }\n           <TopicList topics={topics} lists={lists} user={user}/>\n        </Sider>\n        <Layout className=\"site-layout\">\n          <Header className=\"site-layout-background\" style={{ padding: 0 }} />\n          \n          <Content style={{ margin: '0 16px' }}>\n            <Breadcrumb style={{ margin: '16px 0' }}>\n              <Breadcrumb.Item>React Books</Breadcrumb.Item>\n              <Breadcrumb.Item>{title && title}</Breadcrumb.Item>\n            </Breadcrumb>\n\n            <div className=\"site-layout-background\" style={{ padding: 24, minHeight: 360 }}>\n             \n              <Switch>\n                <Route exact path='/' component={Home} />\n                  <Route path='/new' >\n                        <h2>New</h2>\n                  </Route>\n                  <Route exact path='/topics/:topicId' component={Topic} />\n                  \n                  <Route exact path='/:filter' component={FilterPage} />\n                  \n                  <Route path='/books/:bookId' component={BookPage} />\n                  <Route path='/lists/:listId' component={ListPage} />\n\n              </Switch>\n          \n            </div>\n          </Content>\n          <Footer style={{ textAlign: 'center' }}>React books </Footer>\n        </Layout>\n      </Layout>\n\n    </div>\n  );\n}\n\nexport default App;\n","import * as db from '../../api/db';\r\n\r\nexport default function reducer(state = [], action) {\r\n    switch (action.type) {\r\n        case 'GET_TOPICS':\r\n            return action.payload.topics;\r\n\r\n        case 'GET_TOPIC':\r\n            return action.payload.book;\r\n\r\n        case 'CREATE_TOPIC':\r\n            return state;\r\n    \r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport function getTopics() {\r\n    return db.getTopics()\r\n        .then(topics => ({\r\n            type: 'GET_TOPICS',\r\n            payload: {\r\n                topics\r\n            }\r\n        }));\r\n}\r\n\r\n","import * as auth from '../../api/auth';\r\nimport * as db from '../../api/db';\r\n\r\nexport default function reducer(state = null, action) {\r\n    switch (action.type) {\r\n        case 'LOGIN_USER':\r\n            return action.payload.user;\r\n\r\n        case 'LOGOUT_USER':\r\n            return null;\r\n\r\n        case 'GET_USER':\r\n            return {\r\n                ...state,\r\n                ...action.payload.user\r\n            };\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport function login(user) {\r\n    return {\r\n        type: 'LOGIN_USER',\r\n        payload: {\r\n            user\r\n        }\r\n    };\r\n}\r\n\r\nexport function logout() {\r\n    return {\r\n        type: 'LOGOUT_USER'\r\n    };\r\n}\r\n\r\nexport function getUser(userId) {\r\n    return db.getUser(userId)\r\n        .then(user => ({\r\n            type: 'GET_USER',\r\n            payload: {\r\n                user\r\n            }\r\n        }));\r\n}","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { combineReducers } from 'redux';\r\n\r\nimport user from './user';\r\nimport books from './books';\r\nimport topics from './topics';\r\nimport lists from './lists';\r\n\r\nexport default combineReducers({\r\n    user,\r\n    books,\r\n    topics,\r\n    lists\r\n});","import { applyMiddleware  } from 'redux';\r\nimport promiseMiddleware from 'redux-promise';\r\nimport thunk from 'redux-thunk';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\n\r\nexport default composeWithDevTools(\r\n    applyMiddleware(thunk, promiseMiddleware)\r\n)","import { createStore } from \"redux\";\r\n\r\nimport reducer from \"./reducer\";\r\nimport state from \"./state\";\r\nimport middleware from \"./middleware\";\r\n\r\n\r\nexport default createStore(reducer, state, middleware);","export default {\r\n    user: {\r\n        uid: 777,\r\n        email: 'dum@mail.ru'\r\n    },\r\n    books: {\r\n        list: [],\r\n        single: null\r\n    },\r\n    lists: {\r\n        list: [],\r\n        single: null\r\n    },\r\n    topics: []\r\n};\r\n\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { BrowserRouter as Router } from 'react-router-dom';\n\n\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport store from './store';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <Router basename={process.env.PUBLIC_URL} >\n        <App />\n      </Router>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}